_id: 906dac37-9d8f-42a0-b7dd-ad4d5b4a060b
_parent: 2007-06-17-crivo-de-eratostenes
reply_to: ''
name: Mateus
email: 00d1f53eeb38c1817a9431d73d1cb045
body: "Algoritmo tranquilo. So que tem 2 problemas na implementacao em C: #1 - O vetor de tamanho \"NMAX\" (1000000) eh muito pra alocar na pilha, deve ser alocado via heap (malloc) #2 - O programa removeu os itens que nao sao primos, mas so imprime os primos ate a raiz do maximo. Um while() apos o for() fez o restante. Aqui esta o codigo alterado e compilando com gcc 4.4.0: ```\n\n#include \n#include \n#include  \n\nint main(int ArgCount, char **ArgValue) \n{    \n\tint i, j, *vetor;    \n\tint valorMaximo, raiz;     \n\t\n\t/* Veerifica se pasou o numero certo de parametros */\n\tif(ArgCount != 2)\n\t{\n\t\tprintf(\"Erro na chamada: crivo.exe nUm abraco, vai na sombra!n\");\n\t\treturn(1);\n\t}\n\t\n\t// Primeiro passo    \n\tprintf(\"=== Crivo de Erathostenes ===n\");\n\tvalorMaximo = atoi(ArgValue[1]);\n\tprintf(\"Calculando numeros primos ate %d.n\", valorMaximo);\n\t\n\t// aloca memoria para o vetor\n\tvetor = (int*)malloc((valorMaximo + 1) * sizeof(int));\n\t\n\t// Segundo passo    \n\traiz = sqrt(valorMaximo);     \n\t\n\t// Terceiro passo    \n\tfor(i = 2; i <= valorMaximo; i++) \n\t{        \n\t\tvetor[i] = i;    \n\t}     \n\t\n\t// Quarto passo    \n\tfor(i = 2; i <= raiz; i++) \n\t{        \n\t\tif(vetor[i] == i) \n\t\t{            \n\t\t\tprintf(\"Numero %3d eh primo!n\", i);            \n\t\t\t\n\t\t\t// percorre todos os multiplos deste valor\n\t\t\tfor(j = i + i; j <= valorMaximo; j += i) \n\t\t\t{                \n\t\t\t\t// removendo da lista  \n\t\t\t\tvetor[j] = 0; \n\t\t\t}        \n\t\t}    \n\t}\n\t\n\t/* meu quinto passo */\n\twhile(i <= valorMaximo)\n\t{\n\t\t/* Se tem valor no vetor, imprime */\n\t\tif(vetor[i])\n\t\t{\n\t\t\tprintf(\"Numero %3d eh primo!n\", i);\n\t\t}\n\t\t\n\t\ti++;\n\t}\n\t     \n\t/* Libera a memoria usada */\n\tfree(vetor);\n\t     \n\treturn(0);\n}\n\n```"
date: '2009-06-17T00:40:00.000Z'
timestamp: 1245199200
