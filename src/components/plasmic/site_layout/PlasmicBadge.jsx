/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oH8FCw6CW4Lg76cBx26GoT
// Component: Zh0Xu99edL
import * as React from "react";
import {
  hasVariant,
  classNames,
  Renderer,
  createPlasmicElementProxy,
  PlasmicSlot,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_site_layout.css"; // plasmic-import: oH8FCw6CW4Lg76cBx26GoT/projectcss
import "./PlasmicBadge.css"; // plasmic-import: Zh0Xu99edL/css

export const PlasmicBadge__VariantProps = new Array("type");

export const PlasmicBadge__ArgProps = new Array("children");

function PlasmicBadge__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames({
        "Badge__root--featured__HcdhMHbdsW": hasVariant(
          variants,
          "type",
          "featured"
        ),

        Badge__root__HcdhM: true,
        "plasmic-default__all": true,
        "plasmic-default__div": true
      })}
    >
      <div
        data-plasmic-name={"box"}
        data-plasmic-override={overrides.box}
        className={classNames({
          Badge__box__DvTjy: true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        <PlasmicSlot
          defaultContents={""}
          value={args.children}
          className={classNames({
            "Badge__slotChildren--baseMedium__86nGwatg_U_MVUpr": true,
            "Badge__slotChildren--featured__86nGwHbdsW": hasVariant(
              variants,
              "type",
              "featured"
            ),

            Badge__slotChildren__86nGw: true
          })}
        />
      </div>
    </div>
  );
}

class PlasmicBadge__Renderer extends Renderer {
  constructor(variants, args) {
    super(variants, args, PlasmicBadge__RenderFunc, "root");
  }
  create(variants, args) {
    return new PlasmicBadge__Renderer(variants, args);
  }
  getInternalVariantProps() {
    return PlasmicBadge__VariantProps;
  }
  getInternalArgProps() {
    return PlasmicBadge__ArgProps;
  }
  forNode(name) {
    return super.forNode(name);
  }
}

export const PlasmicBadge = function PlasmicBadgeRoot(props) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "root",
    descendantNames: ["root", "box"],
    internalArgPropNames: PlasmicBadge__ArgProps,
    internalVariantPropNames: PlasmicBadge__VariantProps
  });

  return PlasmicBadge__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "root"
  });
};

PlasmicBadge.box = function PlasmicBadgeBox(props) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "box",
    descendantNames: ["box"],
    internalArgPropNames: PlasmicBadge__ArgProps,
    internalVariantPropNames: PlasmicBadge__VariantProps
  });

  return PlasmicBadge__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "box"
  });
};

PlasmicBadge.createRenderer = () => new PlasmicBadge__Renderer({}, {});

export default PlasmicBadge;
/* prettier-ignore-end */
