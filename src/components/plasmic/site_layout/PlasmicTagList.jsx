/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oH8FCw6CW4Lg76cBx26GoT
// Component: 5P9Z-2oNX3
import * as React from "react";
import {
  classNames,
  Renderer,
  createPlasmicElementProxy,
  PlasmicSlot,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Badge from "../../Badge"; // plasmic-import: Zh0Xu99edL/component
import { ScreenContext } from "../PlasmicGlobalVariant__Screen"; // plasmic-import: fOWX3a-rE7c/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_site_layout.css"; // plasmic-import: oH8FCw6CW4Lg76cBx26GoT/projectcss
import "./PlasmicTagList.css"; // plasmic-import: 5P9Z-2oNX3/css

export const PlasmicTagList__VariantProps = new Array();

export const PlasmicTagList__ArgProps = new Array("children");

function PlasmicTagList__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = {
    screen: React.useContext(ScreenContext)
  };

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      data-plasmic-wrap-flex-child={true}
      className={classNames({
        "TagList__root--baseMedium__mSZ5XQdOD1_MVUpr": true,
        TagList__root__mSZ5X: true,
        "plasmic-default__all": true,
        "plasmic-default__div": true
      })}
    >
      <div
        data-plasmic-name={"box"}
        data-plasmic-override={overrides.box}
        className={classNames({
          "TagList__box--baseMedium__6-CGfQdOD1_MVUpr": true,
          "TagList__box__6-CGf": true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        {"Tags:"}
      </div>

      <PlasmicSlot
        defaultContents={
          <Badge
            data-plasmic-name={"badge"}
            data-plasmic-override={overrides.badge}
            className={classNames({
              TagList__badge__VX6SN: true,
              __wab_instance: true
            })}
            {...{}}
          >
            {"tag"}
          </Badge>
        }
        value={args.children}
      />
    </div>
  );
}

class PlasmicTagList__Renderer extends Renderer {
  constructor(variants, args) {
    super(variants, args, PlasmicTagList__RenderFunc, "root");
  }
  create(variants, args) {
    return new PlasmicTagList__Renderer(variants, args);
  }
  getInternalVariantProps() {
    return PlasmicTagList__VariantProps;
  }
  getInternalArgProps() {
    return PlasmicTagList__ArgProps;
  }
  forNode(name) {
    return super.forNode(name);
  }
}

export const PlasmicTagList = function PlasmicTagListRoot(props) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "root",
    descendantNames: ["root", "box", "badge"],
    internalArgPropNames: PlasmicTagList__ArgProps,
    internalVariantPropNames: PlasmicTagList__VariantProps
  });

  return PlasmicTagList__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "root"
  });
};

PlasmicTagList.box = function PlasmicTagListBox(props) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "box",
    descendantNames: ["box"],
    internalArgPropNames: PlasmicTagList__ArgProps,
    internalVariantPropNames: PlasmicTagList__VariantProps
  });

  return PlasmicTagList__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "box"
  });
};

PlasmicTagList.badge = function PlasmicTagListBadge(props) {
  const { variants, args, overrides } = deriveRenderOpts(props, {
    name: "badge",
    descendantNames: ["badge"],
    internalArgPropNames: PlasmicTagList__ArgProps,
    internalVariantPropNames: PlasmicTagList__VariantProps
  });

  return PlasmicTagList__RenderFunc({
    variants,
    args,
    overrides,
    forNode: "badge"
  });
};

PlasmicTagList.createRenderer = () => new PlasmicTagList__Renderer({}, {});

export default PlasmicTagList;
/* prettier-ignore-end */
